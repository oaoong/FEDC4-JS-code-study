function solution(params) {
  let answer = 0;

  return answer;
}

/*
  1. 알고리즘 or 자료구조 선택 이유
  
  
  2. 시간 복잡도 or 결과
  1h 30m 하다가 포기했습니다...
  
  3. 기타 의견 
  중요 포인트
  1. 각 좌표에 대해서 *2를 해서 계산하는 포인트... 1 간격일 경우 생기는 문제 때문
  2. 전체 맵의 크기가 크지 않고, 사각형 개수 등도 정해져 있으므로, 전체 좌표를 2차원 배열로 처음부터 init해서 사용하면 된다. -> 저는 일일이 사각형 누끼따는 느낌으로 쓸데없는 고생을 하고 있었습니다...
  3. 외각선의 값을 특정 값으로 계산할 수 있도록 하는 생각

  이 세 가지 모두 부족했습니다. BFS 뿐만 아니라 구현 문제적인 측면이 있었던 것 같아요. 나중에 다시 풀어보도록 하겠습니다.
  
  4. 참고 링크
  https://velog.io/@tnehd1998/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%95%84%EC%9D%B4%ED%85%9C-%EC%A4%8D%EA%B8%B0-JavaScript
  
  */
